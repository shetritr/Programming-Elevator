/*

  * main implementation: use this 'C' sample to create your own application
 *
 */


//#include "derivative.h" /* include peripheral declarations */
# include "TFC.h"
#define MUDULO_REGISTER  0x2EE0
unsigned int LightIntensity = MUDULO_REGISTER/2;  // Global variable
void Motor_Dir_Speed (int Direction, int Speed);

int main(void){
	ClockSetupTPM();
	InitGPIO();
	InitPIT();
	MotorConfig();
	Motor_Dir_Speed(1,1);
	wait(); // sleep
	return 0;
}

void Motor_Dir_Speed (int Direction, int Speed){
	GPIOC_PDOR = PORT_LOC(5);  // PTD7 is Input
	int i;
	for(i=100000 ; i>0 ; i--); //delay, button debounce
	TPM2_C1V = 0x1EE0;
	//GPIOE_PDOR = PORT_LOC(23);
	//GPIOC_PDOR |=;
	//GPIOE_PDOR = 0x80;  
	//GPIOE_PDOR = ~PORT_LOC(23);
	//GPIOE_PDOR |= ~PORT_LOC(23);
	
}
//-----------------------------------------------------------------
//  PORTD - ISR = Interrupt Service Routine
//-----------------------------------------------------------------
void PORTD_IRQHandler(void){
	volatile unsigned int i;
	// check that the interrupt was for switch
	if (PORTD_ISFR & SW_POS) {
		
		LightIntensity = (LightIntensity + 0x0960) & 0x3FFF;
	}
	//Debounce or using PFE field
	while(!(GPIOD_PDIR & SW_POS) );// wait of release the button
	for(i=10000 ; i>0 ; i--); //delay, button debounce
	
	PORTD_ISFR |= 0x00000080;  // clear interrupt flag bit of PTD7
}
//-----------------------------------------------------------------
// PIT - ISR = Interrupt Service Routine
//-----------------------------------------------------------------
void PIT_IRQHandler(){
	
	
}
